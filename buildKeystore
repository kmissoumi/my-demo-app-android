#!/bin/bash

timeStamp=$(date +"%Y-%m-%d_%H%M%S_%s")
timeEpoch=$(date +%s)
scriptPath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
baseDir=$( echo "${scriptPath%/*}" )

gradlePropertiesDir="${HOME}/.gradle"
gradlePropertiesFile="${gradlePropertiesDir}/gradle.properties"

keystoreName="grogu.keystore"
SRKA="darkSaber"
SRSF="${scriptPath}/.sauce/${keystoreName}"
SRSP=$(openssl rand -hex 20)
SRKP=$(openssl rand -hex 20)


function cleanUpHelp {
    printf "\n%sSigning configuration was found!\nUse the commands below to archive as needed.\n \n" ${1}
    printf "mv %s %s\n" "${gradlePropertiesFile} ${gradlePropertiesFile}.${timeEpoch}" 
    printf "mv %s %s\n\n" "${SRSF} ${SRSF}.${timeEpoch}"
}


function generateGradleProperties {
    printf "Generating signing configuration...\n"
    printf "%s=%s\n%s=%s\n%s=%s\n%s=%s\n" \
        SAUCE_DEMO_KEY_ALIAS ${SRKA} \
        SAUCE_DEMO_STORE_FILE ${SRSF} \
        SAUCE_DEMO_KEY_PASSWORD ${SRKP} \
        SAUCE_DEMO_STORE_PASSWORD ${SRKP} \
        >> ${gradlePropertiesFile}
}


function generateKeyStore {
    printf "Generating signing keystore...\n"
    keytool -genkey -v \
        -dname "cn=Mando, ou=Mudhorn, o=Mandalor, c=OuterRim" \
        -keyalg RSA -keysize 2048 -validity 10000 \
        -keystore ${SRSF} \
        -storepass ${SRKP} \
        -alias ${SRKA} \
        -keypass ${SRKP} # Different store and key passwords not supported for PKCS12 KeyStores.
}


[[ -d ${gradlePropertiesDir} ]] || mkdir -p ${gradlePropertiesDir}
[[ -f ${gradlePropertiesFile} ]]  && printHelp="TRUE" || generateGradleProperties
[[ -f ${SRSF} ]] && printHelp="TRUE" || generateKeyStore && rc="0"
[[ ${printHelp} == "TRUE" ]] && cleanUpHelp

[[ -z ${rc} ]] && exit 0 || [[ ${rc} == "0" ]] && exit 0



# convert keystore to github secret
openssl base64 < ${SRSF} |tr -d '\n' |tee ${SRSF}.txt